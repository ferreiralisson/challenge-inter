{
	"info": {
		"_postman_id": "f289c0a3-6d87-4512-aae4-918b878edbca",
		"name": "challenge inter integration test",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "create user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status returned 201\", function(){",
							"    pm.response.to.have.status(201)",
							"}",
							");",
							"",
							"postman.setEnvironmentVariable(\"ID_USER\", JSON.parse(responseBody).id);",
							"postman.setEnvironmentVariable(\"NAME_USER\", JSON.parse(responseBody).name);",
							"postman.setEnvironmentVariable(\"EMAIL_USER\", JSON.parse(responseBody).email);",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"alisson\",\n    \"email\": \"email@exemplo.com\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BASE_URL}}/user",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"user"
					]
				}
			},
			"response": []
		},
		{
			"name": "update user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status returned 204\", function(){",
							"    pm.response.to.have.status(204)",
							"}",
							");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"id\": {{ID_USER}},\n    \"name\": \"alisson3\",\n    \"email\": \"email2@exemplo.com\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BASE_URL}}/user",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"user"
					]
				}
			},
			"response": []
		},
		{
			"name": "find all users",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonReturn = pm.response.json();",
							"pm.test(\"Returned at least 1 record\", function(){",
							"    pm.expect(Object.keys(jsonReturn).length).to.greaterThan(0)",
							"}",
							");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{BASE_URL}}/user",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"user"
					]
				}
			},
			"response": []
		},
		{
			"name": "find by id user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonReturn = pm.response.json();",
							"pm.test(\"Returned at least 1 record\", function(){",
							"    pm.expect(Object.keys(jsonReturn).length).to.greaterThan(0)",
							"}",
							");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{BASE_URL}}/user/{{ID_USER}}",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"user",
						"{{ID_USER}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "calculate single digit",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status returned 201\", function(){",
							"    pm.response.to.have.status(201)",
							"}",
							");",
							"",
							"var jsonReturn = pm.response.json();",
							"pm.test(\"Returned at least 1 record\", function(){",
							"    pm.expect(Object.keys(jsonReturn).length).to.greaterThan(0)",
							"}",
							");",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"numberRepresentation\": \"46464645646\",\n    \"numberOfRepetitions\": 4,\n    \"idUser\": {{ID_USER}}\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BASE_URL}}/single-digit",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"single-digit"
					]
				}
			},
			"response": []
		},
		{
			"name": "find all single digit by user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status returned 200\", function(){",
							"    pm.response.to.have.status(200)",
							"}",
							");",
							"",
							"var jsonReturn = pm.response.json();",
							"pm.test(\"Returned at least 1 record\", function(){",
							"    pm.expect(Object.keys(jsonReturn).length).to.greaterThan(0)",
							"}",
							");",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{BASE_URL}}/single-digit/{{ID_USER}}",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"single-digit",
						"{{ID_USER}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "generate key",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status returned 201\", function(){",
							"    pm.response.to.have.status(201)",
							"}",
							");",
							"",
							"var jsonReturn = pm.response.json();",
							"pm.test(\"Returned at least 1 record\", function(){",
							"    pm.expect(Object.keys(jsonReturn).length).to.greaterThan(0)",
							"}",
							");",
							"",
							"postman.setEnvironmentVariable(\"PUBLICKEY\", JSON.parse(responseBody).publicKey);",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{BASE_URL}}/encryption/generate-key?id={{ID_USER}}",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"encryption",
						"generate-key"
					],
					"query": [
						{
							"key": "id",
							"value": "{{ID_USER}}"
						},
						{
							"key": null,
							"value": "",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "encrypt user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status returned 204\", function(){",
							"    pm.response.to.have.status(204)",
							"}",
							");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"publicKey\": \"{{PUBLICKEY}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BASE_URL}}/encryption/encrypt-user",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"encryption",
						"encrypt-user"
					]
				}
			},
			"response": []
		},
		{
			"name": "decrypt user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status returned 204\", function(){",
							"    pm.response.to.have.status(204)",
							"}",
							");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"publicKey\": \"{{PUBLICKEY}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BASE_URL}}/encryption/decrypt-user",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"encryption",
						"decrypt-user"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status retornou 204\", function(){",
							"    pm.response.to.have.status(204)",
							"}",
							");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{BASE_URL}}/user/{{ID_USER}}",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"user",
						"{{ID_USER}}"
					]
				}
			},
			"response": []
		}
	]
}